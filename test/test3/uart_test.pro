//test3用于检测外设uart的功能是否正确,x1寄存器的初始值为0x60000000
@00
	00000000000000000000000000010011	//00000013	//nop				延时指令
	01100000000000000000000010110111    //LUI x1 0x60000000   //给x1设置初始值0x60000000
	00000111010100000000000110010011    //ADDI x3 ,0x75       //给x3设置初始值0x75
	00001111010100000000001000010011    //ADDI x4 ,0xf5       //给x4设置初始值0xf5
	00000111011100000000001010010011    //ADDI x5 ,0x77       //给x5设置初始值0x77
	00000000000100000000001110010011    //ADDI x7 ,0x01       //给x7设置初始值0x01
	00000000000000000000000000010011	//00000013	//nop				延时指令
	00000100001100001010000000100011	//0430a023	//SW	x3 x1 imm	x3 -> [x1+imm]   //imm = 0x00000040  最终地址：0x60000040
	00000100010000001010000000100011	//0440a023	//SW	x4 x1 imm	x4 -> [x1+imm]   //imm = 0x00000040  最终地址：0x60000040
	00000100010100001010000000100011	//0450a023	//SW	x5 x1 imm	x5 -> [x1+imm]   //imm = 0x00000040  最终地址：0x60000040
	00000000000000001010001100000011	//0000a303	//LW	x6 x1 imm	x6 = [x1+imm]   //imm =  0x00000000  最终地址：0x60000000
	00000010011100110000000001100011    //00730463  //BEQ   x6 x7 0x00000020    //如果x6的值为0x0000_0001，表示fifoRX不是空的，我们需要读它，向前跳转8地址
	00000000000000000000000000010011	//00000013	//nop				延时指令	
	00000000000000000000000000010011	//00000013	//nop				延时指令	
	00000010100000000000000101100111	//01000167	//JALR	X2 X1 0x28	无条件跳转至程序地址1处\
	00000000000000000000000000010011	//00000013	//nop				延时指令
	00000000000000000000000000010011	//00000013	//nop				延时指令	
	00000000000000000000000000010011	//00000013	//nop				延时指令
	00000000000000000000000000010011	//00000013	//nop				延时指令
	00000000000000000000000000010011	//00000013	//nop				延时指令	
	00000000010000001010010010000011	//0000a483	//LW	x9 x1 imm	x9 = [x1+imm]   //imm =  0x00000004  最终地址：0x60000004
	00000010100000000000000101100111	//01000167	//JALR	X2 X1 16	无条件跳转至程序地址1处